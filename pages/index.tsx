import Head from "next/head";
import { useState } from "react";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import data, { Data } from "../possibilities";

const randomElement = (array: any) => array[Math.floor(Math.random() * array.length)];

const getRandomOccurrence = (data: Data) => {
  const randomOccurrenceKey = randomElement(Object.keys(data.occurrences));
  const randomOccurrenceVerb = randomElement(data.occurrences[randomOccurrenceKey]);
  return [randomOccurrenceKey, randomOccurrenceVerb];
};

const getRandomNoun = (data: Data) => {
  return randomElement(data.nouns);
};

const getRandomVerb = (data: Data) => {
  return randomElement(data.verbs);
};

export async function getStaticProps() {
  return {
    props: {
      initialOccurrenceNoun: getRandomOccurrence(data)[0],
      initialOccurrenceVerb: getRandomOccurrence(data)[1],
      initialNoun: getRandomNoun(data),
      initialVerb: getRandomVerb(data),
    },
  };
}

export default function Home({
  initialOccurrenceNoun,
  initialOccurrenceVerb,
  initialNoun,
  initialVerb,
}: any) {
  const [randomOccurrenceNoun, setRandomOccurrenceNoun] = useState(initialOccurrenceNoun);
  const [randomOccurrenceVerb, setRandomOccurrenceVerb] = useState(initialOccurrenceVerb);
  const [randomNoun, setRandomNoun] = useState(initialNoun);
  const [randomVerb, setRandomVerb] = useState(initialVerb);

  const getNewPermutation = () => {
    const [occurrenceNoun, occurrenceVerb]: string[] = getRandomOccurrence(data);
    setRandomOccurrenceNoun(occurrenceNoun);
    setRandomOccurrenceVerb(occurrenceVerb);
    setRandomNoun(getRandomNoun(data));
    setRandomVerb(getRandomVerb(data));
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Game Mechanics Generator</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Game Mechanics Generator <small>0.1</small>
        </h1>

        <div style={{ marginBottom: "100px" }} />

        <div className={styles.grid}>
          <div className={styles.card}>
            <h2 className={styles.text}>As the</h2>
            <h2 className={styles.textoption}>{randomOccurrenceNoun}</h2>
            <h2 className={styles.textoption}>{randomOccurrenceVerb}</h2>
            <h2 className={styles.text}>,</h2>
          </div>
          <div className={styles.card}>
            <h2 className={styles.textoption}>{randomNoun}</h2>
            <h2 className={styles.textoption}>{randomVerb}</h2>
            <h2 className={styles.text}>.</h2>
          </div>
        </div>

        <button onClick={() => getNewPermutation()}>Throw the dice!</button>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
